syntax = "proto3";

option java_package = "ex.grpc";

package blockserver;

// Declare the service
service BlockServer {
    // Function invoked to send the request
    rpc client_gettime (TimeRequest) returns (TimeReply) {}
    rpc client_read (ClientReadRequest) returns (ClientReadReply) {}
    rpc client_write (ClientWriteRequest) returns (ClientWriteReply) {}
    rpc client_delete (ClientDeleteRequest) returns (ClientDeleteReply) {}
    rpc client_acquire_lock (AcquireLockRequest) returns (AcquireLockReply) {}
    rpc client_check_lock (CheckLockRequest) returns (CheckLockReply) {}
    rpc client_giveup_lock (GiveupLockRequest) returns (GiveupLockReply) {}
    rpc client_release_lock (ReleaseLockRequest) returns (ReleaseLockReply) {}
}

// shoud be empty
message TimeRequest {

}

// The response message containing lamport clock
message TimeReply {
    int32 id = 1;
    int32 time = 2;
}

// The read request message contains key value
message ClientReadRequest {
    string key = 1;
}

// The response message containing lamport clock and kv-pair
message ClientReadReply {
    // time
    int32 id = 1;
    int32 time = 2;
    // value
    string key = 3;
    string value = 4;
}

message ClientWriteRequest {
    // time
    int32 id = 1;
    int32 time = 2;
    // value
    string key = 3;
    string value = 4;
}

// The response message containing ack
message ClientWriteReply {
    int32 ack = 1;
}

message ClientDeleteRequest {
    // time
    int32 id = 1;
    int32 time = 2;
    // value
    string key = 3;
    string value = 4;
}

// The response message containing ack
message ClientDeleteReply {
    int32 ack = 1;
}

message AcquireLockRequest {
    // time
    int32 id = 1;
    int32 time = 2;
}

message AcquireLockReply {
    int32 success = 1;
}

message CheckLockRequest {
    // time
    int32 id = 1;
    int32 time = 2;
}

message CheckLockReply {
    int32 success = 1;
}

message GiveupLockRequest {
    // time
    int32 id = 1;
    int32 time = 2;
}

message GiveupLockReply {
    int32 success = 1;
}

message ReleaseLockRequest {
    // time
    int32 id = 1;
    int32 time = 2;
}

message ReleaseLockReply {
    int32 success = 1;
}